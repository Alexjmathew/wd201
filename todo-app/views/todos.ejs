<%
  // Get today's date in YYYY-MM-DD format
  const today = new Date().toISOString().split('T')[0];
  
  // Categorize todos
  const overdueTodos = allTodos.filter(todo => !todo.completed && todo.dueDate < today);
  const dueTodayTodos = allTodos.filter(todo => !todo.completed && todo.dueDate === today);
  const dueLaterTodos = allTodos.filter(todo => !todo.completed && todo.dueDate > today);
%>

<div>
  <!-- Overdue Section -->
  <h5 style="display:inline">Overdue</h5>
  <span style="display:inline" id="count-overdue" class="bg-gray-200 text-black px-3 py-1 rounded font-medium mr-2 mb-2"><%= overdueTodos.length %></span>
  <ul class="list-none">
    <% overdueTodos.forEach(todo => { %>
      <li class="Todo-Item">
        <div class="flex items-center w-fit my-2 px-2 py-1 rounded hover:bg-purple-50">
          <input id="todo-checkbox-<%= todo.id %>" type="checkbox" class="w-4 h-4 text-blue-600 bg-gray-100 rounded border"
                 onchange="toggleTodo(<%= todo.id %>)">
          <label for="todo-checkbox-<%= todo.id %>" class="ml-2 text-sm text-gray-600 cursor-pointer"><%= todo.title %></label>
          <a href="#" class="hidden trash-icon ml-2" onclick="deleteTodo(<%= todo.id %>)">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4">
              <path stroke-linecap="round" stroke-linejoin="round" d="M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0" />
            </svg>
          </a>
        </div>
      </li>
    <% }) %>
  </ul>

  <!-- Due Today Section -->
  <h5 style="display:inline">Due Today</h5>
  <span style="text-align:right" id="count-due-today" class="bg-gray-200 text-black px-3 py-1 rounded font-medium mr-2 mb-2"><%= dueTodayTodos.length %></span>
  <ul class="list-none">
    <% dueTodayTodos.forEach(todo => { %>
      <li class="Todo-Item">
        <div class="flex items-center w-fit my-2 px-2 py-1 rounded hover:bg-purple-50">
          <input id="todo-checkbox-<%= todo.id %>" type="checkbox" class="w-4 h-4 text-blue-600 bg-gray-100 rounded border"
                 onchange="toggleTodo(<%= todo.id %>)">
          <label for="todo-checkbox-<%= todo.id %>" class="ml-2 text-sm text-gray-600 cursor-pointer"><%= todo.title %></label>
          <a href="#" class="hidden trash-icon ml-2" onclick="deleteTodo(<%= todo.id %>)">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4">
              <path stroke-linecap="round" stroke-linejoin="round" d="M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0" />
            </svg>
          </a>
        </div>
      </li>
    <% }) %>
  </ul>

  <!-- Due Later Section -->
  <h5 style="display:inline">Due Later</h5>
  <span style="text-align:right" id="count-due-later" class="bg-gray-200 text-black px-3 py-1 rounded font-medium mr-2 mb-2"><%= dueLaterTodos.length %></span>
  <ul class="list-none">
    <% dueLaterTodos.forEach(todo => { %>
      <li class="Todo-Item">
        <div class="flex items-center w-fit my-2 px-2 py-1 rounded hover:bg-purple-50">
          <input id="todo-checkbox-<%= todo.id %>" type="checkbox" class="w-4 h-4 text-blue-600 bg-gray-100 rounded border"
                 onchange="toggleTodo(<%= todo.id %>)">
          <label for="todo-checkbox-<%= todo.id %>" class="ml-2 text-sm text-gray-600 cursor-pointer"><%= todo.title %></label>
          <a href="#" class="hidden trash-icon ml-2" onclick="deleteTodo(<%= todo.id %>)">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4">
              <path stroke-linecap="round" stroke-linejoin="round" d="M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0" />
            </svg>
          </a>
        </div>
      </li>
    <% }) %>
  </ul>
</div>

<script>
  function toggleTodo(id) {
    fetch(`/todos/${id}/toggle`, {
      method: 'POST'
    }).then(() => {
      location.reload();
    });
  }

  function deleteTodo(id) {
    if (confirm('Are you sure you want to delete this todo?')) {
      fetch(`/todos/${id}/delete`, {
        method: 'POST'
      }).then(() => {
        location.reload();
      });
    }
  }

  // Show trash icons on hover
  document.addEventListener('DOMContentLoaded', function() {
    const todoItems = document.querySelectorAll('.Todo-Item');
    todoItems.forEach(item => {
      item.addEventListener('mouseenter', function() {
        const trashIcon = this.querySelector('.trash-icon');
        if (trashIcon) {
          trashIcon.classList.remove('hidden');
        }
      });
      
      item.addEventListener('mouseleave', function() {
        const trashIcon = this.querySelector('.trash-icon');
        if (trashIcon) {
          trashIcon.classList.add('hidden');
        }
      });
    });
  });
</script>
